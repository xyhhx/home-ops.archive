apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o calckey-deployment.yaml
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: web
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o calckey-deployment.yaml
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      selector:
        matchLabels:
          io.kompose.service: db
      replicas: 1
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: PGDATA
                  value: /var/lib/postgresql/data/t
                - name: POSTGRES_DB
                  valueFrom:
                    configMapKeyRef:
                      key: POSTGRES_DB
                      name: db-config-docker-env
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: POSTGRES_PASSWORD
                      name: db-config-docker-env
                - name: POSTGRES_USER
                  valueFrom:
                    configMapKeyRef:
                      key: POSTGRES_USER
                      name: db-config-docker-env
              image: docker.io/postgres:12.2-alpine
              name: calckey-db
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: db-claim0
          restartPolicy: Always
          volumes:
            - name: db-claim0
              persistentVolumeClaim:
                claimName: db-claim0
    status: {}
  - apiVersion: v1
    data:
      POSTGRES_DB: calckey
      POSTGRES_PASSWORD: example-calckey-pass
      POSTGRES_USER: example-calckey-user
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-config-docker-env
      name: db-config-docker-env
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-claim0
      name: db-claim0
    spec:
      storageClassName: openebs-jiva-csi-default
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o calckey-deployment.yaml
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      selector:
        matchLabels:
          io.kompose.service: redis
      replicas: 1
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: redis
        spec:
          containers:
            - image: docker.io/redis:7.0-alpine
              name: calckey-redis
              resources: {}
              volumeMounts:
                - mountPath: /data
                  name: redis-claim0
          restartPolicy: Always
          volumes:
            - name: redis-claim0
              persistentVolumeClaim:
                claimName: redis-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: redis-claim0
      name: redis-claim0
    spec:
      storageClassName: openebs-jiva-csi-default
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o calckey-deployment.yaml
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      selector:
        matchLabels:
          io.kompose.service: web
      replicas: 1
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: web
        spec:
          containers:
            - env:
                - name: NODE_ENV
                  value: production
              image: docker.io/thatonecalculator/calckey
              name: calckey-web
              ports:
                - containerPort: 3000
              resources: {}
              volumeMounts:
                - mountPath: /calckey/files
                  name: web-claim0
                - mountPath: /calckey/.config
                  name: web-claim1
                  # readOnly: true
                - mountPath: /calckey/.config/default.yml
                  name: calckey-config
                  readOnly: true
          restartPolicy: Always
          volumes:
            - name: web-claim0
              persistentVolumeClaim:
                claimName: web-claim0
            - name: web-claim1
              persistentVolumeClaim:
                claimName: web-claim1
                # readOnly: true
            - name: calckey-config
              configMap:
                name: calckey-configuration
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-claim0
      name: web-claim0
    spec:
      storageClassName: openebs-jiva-csi-default
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-claim1
      name: web-claim1
    spec:
      storageClassName: openebs-jiva-csi-default
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: calckey-configuration
    data:
      default.yml: |-
        {{ .Files.Get ".config/default.yml"|nindent 4 }}
        url: localhost
kind: List
metadata: {}
